2021-09-06 10:08:52,425 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.context.ApplicationContextException: Unable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean.
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.demo.jpa.springBootJPAMappingApp.main(springBootJPAMappingApp.java:21)
Caused by: org.springframework.context.ApplicationContextException: Unable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean.
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getWebServerFactory(ServletWebServerApplicationContext.java:210)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160)
	... 8 common frames omitted
2021-09-06 10:11:15,459 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@314a31b0
2021-09-06 10:11:15,507 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@314a31b0
2021-09-06 10:11:15,508 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@314a31b0
2021-09-06 10:11:15,518 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f323b3a
2021-09-06 10:11:15,522 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@4207852d
2021-09-06 10:11:15,523 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@839df62
2021-09-06 10:11:15,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@1ff15a50
2021-09-06 10:11:15,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@1ff15a50
2021-09-06 10:11:15,530 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1ff15a50
2021-09-06 10:11:15,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@1200458e
2021-09-06 10:11:15,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@1200458e
2021-09-06 10:11:15,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1200458e
2021-09-06 10:11:15,553 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@5af64ce0
2021-09-06 10:11:15,554 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@5af64ce0
2021-09-06 10:11:15,554 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5af64ce0
2021-09-06 10:11:15,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@6cbe68e9
2021-09-06 10:11:15,560 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@6cbe68e9
2021-09-06 10:11:15,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6cbe68e9
2021-09-06 10:11:15,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@49f3ff41
2021-09-06 10:11:15,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@49f3ff41
2021-09-06 10:11:15,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@49f3ff41
2021-09-06 10:11:15,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@22d9ca63
2021-09-06 10:11:15,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@22d9ca63
2021-09-06 10:11:15,578 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22d9ca63
2021-09-06 10:11:15,581 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4f2d014a
2021-09-06 10:11:15,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@4f2d014a
2021-09-06 10:11:15,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4f2d014a
2021-09-06 10:11:15,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d98daa0
2021-09-06 10:11:15,586 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d98daa0
2021-09-06 10:11:15,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b7c80c6
2021-09-06 10:11:15,593 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b7c80c6
2021-09-06 10:11:15,599 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@429aeac1
2021-09-06 10:11:15,601 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@429aeac1
2021-09-06 10:11:15,603 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8bd076a
2021-09-06 10:11:15,606 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@634ff56
2021-09-06 10:11:15,617 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@58ae402b
2021-09-06 10:11:15,617 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ae402b
2021-09-06 10:11:15,630 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@3e3cd6fe
2021-09-06 10:11:15,632 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3e3cd6fe
2021-09-06 10:11:15,635 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@5ccb85d6
2021-09-06 10:11:15,635 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ccb85d6
2021-09-06 10:11:15,639 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2091833
2021-09-06 10:11:15,639 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2091833
2021-09-06 10:11:15,642 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@481558ce
2021-09-06 10:11:15,642 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@481558ce
2021-09-06 10:11:15,645 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c0f28f8
2021-09-06 10:11:15,646 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c0f28f8
2021-09-06 10:11:15,649 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@c7f4457
2021-09-06 10:11:15,650 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@c7f4457
2021-09-06 10:11:15,655 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17043b04
2021-09-06 10:11:15,655 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17043b04
2021-09-06 10:11:15,662 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f5ecc4
2021-09-06 10:11:15,662 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f5ecc4
2021-09-06 10:11:15,670 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@7f287b98
2021-09-06 10:11:15,671 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f287b98
2021-09-06 10:11:15,675 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@327e5be5
2021-09-06 10:11:15,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@327e5be5
2021-09-06 10:11:15,679 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1b90fee4
2021-09-06 10:11:15,680 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b90fee4
2021-09-06 10:11:15,680 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b90fee4
2021-09-06 10:11:15,683 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7bc6935c
2021-09-06 10:11:15,686 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@7066363
2021-09-06 10:11:15,687 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7066363
2021-09-06 10:11:15,687 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7066363
2021-09-06 10:11:15,689 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2349f14d
2021-09-06 10:11:15,692 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@628b819d
2021-09-06 10:11:15,694 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@706ddbc8
2021-09-06 10:11:15,695 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@706ddbc8
2021-09-06 10:11:15,707 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@6bbab114
2021-09-06 10:11:15,707 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6bbab114
2021-09-06 10:11:15,710 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@25f61c2c
2021-09-06 10:11:15,710 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25f61c2c
2021-09-06 10:11:15,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@234c5e41
2021-09-06 10:11:15,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@234c5e41
2021-09-06 10:11:15,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f63a513
2021-09-06 10:11:15,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f63a513
2021-09-06 10:11:15,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f7c420c
2021-09-06 10:11:15,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@d7bbf12
2021-09-06 10:11:15,721 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@d7bbf12
2021-09-06 10:11:15,721 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@d7bbf12
2021-09-06 10:11:15,723 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@47acd13b
2021-09-06 10:11:15,723 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@47acd13b
2021-09-06 10:11:15,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@47acd13b
2021-09-06 10:11:15,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@180b3819
2021-09-06 10:11:15,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@73fbdf68
2021-09-06 10:11:15,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@4de79b7d
2021-09-06 10:11:15,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@4de79b7d
2021-09-06 10:11:15,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@4de79b7d
2021-09-06 10:11:15,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@66bf40e5
2021-09-06 10:11:15,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@66bf40e5
2021-09-06 10:11:15,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@66bf40e5
2021-09-06 10:11:15,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@39666e42
2021-09-06 10:11:15,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@60f21960
2021-09-06 10:11:15,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@79476a4e
2021-09-06 10:11:15,767 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79476a4e
2021-09-06 10:11:15,771 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a01d7f0
2021-09-06 10:11:15,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@7061622
2021-09-06 10:11:15,781 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7061622
2021-09-06 10:11:15,791 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@45e6d1e0
2021-09-06 10:11:15,791 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45e6d1e0
2021-09-06 10:11:15,793 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e377967
2021-09-06 10:11:15,797 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3281dfc2
2021-09-06 10:11:15,818 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4751e8b9
2021-09-06 10:11:15,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@5cd96b41
2021-09-06 10:11:15,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5cd96b41
2021-09-06 10:11:15,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1235151c
2021-09-06 10:11:15,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1f778
2021-09-06 10:11:15,844 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cc65c2
2021-09-06 10:11:15,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@574059d5
2021-09-06 10:11:15,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d672bd4
2021-09-06 10:11:15,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@67770b37
2021-09-06 10:11:15,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72906e
2021-09-06 10:11:15,845 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5529ff44
2021-09-06 10:11:16,962 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f3ca64a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d464510]
2021-09-06 10:11:18,761 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f3ca64a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2b6fb197]
2021-09-06 10:11:22,635 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:11:22,641 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:11:22,642 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:11:22,644 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:11:22,645 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:11:22,646 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:11:22,648 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:11:22,659 DEBUG org.hibernate.SQL [main] create sequence hibernate_sequence start with 1 increment by 1
2021-09-06 10:11:22,694 DEBUG org.hibernate.SQL [main] create table address (id integer not null, city varchar(255), pincode integer not null, primary key (id))
2021-09-06 10:11:22,712 DEBUG org.hibernate.SQL [main] create table books (id bigint not null, author varchar(255), isbn varchar(255), title varchar(255), primary key (id))
2021-09-06 10:11:22,715 DEBUG org.hibernate.SQL [main] create table customer (customer_id bigint not null, address varchar(255), mobile bigint, cust_name varchar(255), primary key (customer_id))
2021-09-06 10:11:22,718 DEBUG org.hibernate.SQL [main] create table employee (empid bigint not null, name varchar(255), address_id integer, primary key (empid))
2021-09-06 10:11:22,721 DEBUG org.hibernate.SQL [main] create table pages (id bigint not null, chapter varchar(255), content varchar(255), number integer not null, book_id bigint not null, primary key (id))
2021-09-06 10:11:22,725 DEBUG org.hibernate.SQL [main] create table user (id bigint not null, password varchar(255), role varchar(255), user_name varchar(255), primary key (id))
2021-09-06 10:11:22,729 DEBUG org.hibernate.SQL [main] alter table books add constraint UK_kibbepcitr0a3cpk3rfr7nihn unique (isbn)
2021-09-06 10:11:22,741 DEBUG org.hibernate.SQL [main] alter table employee add constraint FKga73hdtpb67twlr9c1i337tyt foreign key (address_id) references address
2021-09-06 10:11:22,779 DEBUG org.hibernate.SQL [main] alter table pages add constraint FK5lpjg9gvqj3g9ukhyecxdf6cq foreign key (book_id) references books
2021-09-06 10:11:22,848 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b6fb197] for TypeConfiguration
2021-09-06 10:11:38,227 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:11:38,487 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:11:38,491 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:11:38,567 DEBUG org.hibernate.SQL [main] insert into books (author, isbn, title, id) values (?, ?, ?, ?)
2021-09-06 10:11:38,575 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [VARCHAR] - [NagaRao]
2021-09-06 10:11:38,576 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [ee]
2021-09-06 10:11:38,576 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [Abc]
2021-09-06 10:11:38,637 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [BIGINT] - [1]
2021-09-06 10:11:38,668 DEBUG org.hibernate.SQL [main] insert into pages (book_id, chapter, content, number, id) values (?, ?, ?, ?, ?)
2021-09-06 10:11:38,670 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [1]
2021-09-06 10:11:38,674 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [First]
2021-09-06 10:11:38,700 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [My first chapter]
2021-09-06 10:11:38,715 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [INTEGER] - [101]
2021-09-06 10:11:38,717 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [5] as [BIGINT] - [2]
2021-09-06 10:11:38,760 DEBUG org.hibernate.SQL [main] insert into pages (book_id, chapter, content, number, id) values (?, ?, ?, ?, ?)
2021-09-06 10:11:38,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [1]
2021-09-06 10:11:38,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [Second]
2021-09-06 10:11:38,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [My Second chapter]
2021-09-06 10:11:38,765 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [INTEGER] - [102]
2021-09-06 10:11:38,766 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [5] as [BIGINT] - [3]
2021-09-06 10:11:39,863 DEBUG org.hibernate.SQL [main] select book0_.id as id1_1_, book0_.author as author2_1_, book0_.isbn as isbn3_1_, book0_.title as title4_1_ from books book0_
2021-09-06 10:11:39,877 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_1_] : [BIGINT]) - [1]
2021-09-06 10:11:39,895 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([author2_1_] : [VARCHAR]) - [NagaRao]
2021-09-06 10:11:39,896 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([isbn3_1_] : [VARCHAR]) - [ee]
2021-09-06 10:11:39,897 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([title4_1_] : [VARCHAR]) - [Abc]
2021-09-06 10:11:39,935 TRACE org.hibernate.type.CollectionType [main] Created collection wrapper: [com.example.demo.jpa.oneToMany.Book.pages#1]
2021-09-06 10:11:40,274 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.demo.DemoApplication.main(DemoApplication.java:44)
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.example.demo.jpa.oneToMany.Book.pages, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentSet.iterator(PersistentSet.java:188)
	at com.example.demo.DemoApplication.run(DemoApplication.java:87)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-09-06 10:11:41,400 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:11:41,421 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:11:41,424 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:11:41,427 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:11:41,430 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:11:41,432 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:11:41,434 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:11:41,437 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b6fb197] for TypeConfiguration
2021-09-06 10:11:41,438 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6694fb1b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b6fb197]
2021-09-06 10:14:15,058 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@75cf0de5
2021-09-06 10:14:15,071 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@75cf0de5
2021-09-06 10:14:15,073 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75cf0de5
2021-09-06 10:14:15,077 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@67cffead
2021-09-06 10:14:15,079 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@217c23ce
2021-09-06 10:14:15,081 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@52226e57
2021-09-06 10:14:15,085 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@6dee8ae6
2021-09-06 10:14:15,086 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@6dee8ae6
2021-09-06 10:14:15,087 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6dee8ae6
2021-09-06 10:14:15,091 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@66fb45e5
2021-09-06 10:14:15,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@66fb45e5
2021-09-06 10:14:15,092 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66fb45e5
2021-09-06 10:14:15,097 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@56846330
2021-09-06 10:14:15,098 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@56846330
2021-09-06 10:14:15,099 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56846330
2021-09-06 10:14:15,107 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@136ccbfe
2021-09-06 10:14:15,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@136ccbfe
2021-09-06 10:14:15,109 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@136ccbfe
2021-09-06 10:14:15,113 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@d611f1c
2021-09-06 10:14:15,114 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@d611f1c
2021-09-06 10:14:15,115 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d611f1c
2021-09-06 10:14:15,119 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@28e0e464
2021-09-06 10:14:15,120 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@28e0e464
2021-09-06 10:14:15,121 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28e0e464
2021-09-06 10:14:15,132 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@f25f48a
2021-09-06 10:14:15,133 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@f25f48a
2021-09-06 10:14:15,133 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f25f48a
2021-09-06 10:14:15,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b9d018b
2021-09-06 10:14:15,137 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b9d018b
2021-09-06 10:14:15,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1de4285e
2021-09-06 10:14:15,141 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1de4285e
2021-09-06 10:14:15,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@e91b4f4
2021-09-06 10:14:15,144 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@e91b4f4
2021-09-06 10:14:15,146 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4099209b
2021-09-06 10:14:15,147 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3728a578
2021-09-06 10:14:15,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@4215e133
2021-09-06 10:14:15,152 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@4215e133
2021-09-06 10:14:15,156 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@488f3dd1
2021-09-06 10:14:15,156 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@488f3dd1
2021-09-06 10:14:15,161 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@1f43cab7
2021-09-06 10:14:15,162 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1f43cab7
2021-09-06 10:14:15,165 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93b51e
2021-09-06 10:14:15,166 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93b51e
2021-09-06 10:14:15,169 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@420cd102
2021-09-06 10:14:15,169 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@420cd102
2021-09-06 10:14:15,172 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@ca8ef3a
2021-09-06 10:14:15,172 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@ca8ef3a
2021-09-06 10:14:15,179 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c82b5df
2021-09-06 10:14:15,179 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c82b5df
2021-09-06 10:14:15,182 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33e434c8
2021-09-06 10:14:15,183 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33e434c8
2021-09-06 10:14:15,188 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32120956
2021-09-06 10:14:15,189 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32120956
2021-09-06 10:14:15,194 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@2e4389ed
2021-09-06 10:14:15,194 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e4389ed
2021-09-06 10:14:15,201 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@67bd351e
2021-09-06 10:14:15,202 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67bd351e
2021-09-06 10:14:15,206 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@75b38c36
2021-09-06 10:14:15,209 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75b38c36
2021-09-06 10:14:15,209 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75b38c36
2021-09-06 10:14:15,213 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17e0933c
2021-09-06 10:14:15,216 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@478b0739
2021-09-06 10:14:15,217 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@478b0739
2021-09-06 10:14:15,217 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@478b0739
2021-09-06 10:14:15,220 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fc0bbc6
2021-09-06 10:14:15,224 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@609319c3
2021-09-06 10:14:15,226 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@6397248c
2021-09-06 10:14:15,227 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6397248c
2021-09-06 10:14:15,229 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@38291795
2021-09-06 10:14:15,230 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@38291795
2021-09-06 10:14:15,233 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e3d7dd
2021-09-06 10:14:15,234 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e3d7dd
2021-09-06 10:14:15,236 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@5d152bcd
2021-09-06 10:14:15,236 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d152bcd
2021-09-06 10:14:15,241 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1450131a
2021-09-06 10:14:15,241 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1450131a
2021-09-06 10:14:15,243 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53f0d09c
2021-09-06 10:14:15,245 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@3f6f3cc
2021-09-06 10:14:15,245 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3f6f3cc
2021-09-06 10:14:15,246 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@3f6f3cc
2021-09-06 10:14:15,247 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32f1fafe
2021-09-06 10:14:15,248 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32f1fafe
2021-09-06 10:14:15,248 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32f1fafe
2021-09-06 10:14:15,251 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@183ade54
2021-09-06 10:14:15,252 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@2839e3c8
2021-09-06 10:14:15,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@25c2a9e3
2021-09-06 10:14:15,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@25c2a9e3
2021-09-06 10:14:15,254 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@25c2a9e3
2021-09-06 10:14:15,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@423a0e1d
2021-09-06 10:14:15,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@423a0e1d
2021-09-06 10:14:15,257 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@423a0e1d
2021-09-06 10:14:15,260 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@6b9fdbc6
2021-09-06 10:14:15,262 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@f557c37
2021-09-06 10:14:15,267 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@71aaf151
2021-09-06 10:14:15,268 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71aaf151
2021-09-06 10:14:15,270 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52ea0269
2021-09-06 10:14:15,274 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@4da1f38a
2021-09-06 10:14:15,275 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4da1f38a
2021-09-06 10:14:15,279 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@16c1519e
2021-09-06 10:14:15,280 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16c1519e
2021-09-06 10:14:15,281 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b000fe6
2021-09-06 10:14:15,282 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b25ab31
2021-09-06 10:14:15,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@1c57f6b2
2021-09-06 10:14:15,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@72906e
2021-09-06 10:14:15,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72906e
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5eb5da12
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a50d04a
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5099c59b
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@73c31181
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d620a1
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f486211
2021-09-06 10:14:15,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51e3d37e
2021-09-06 10:14:15,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a479fda
2021-09-06 10:14:16,148 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@570ba13] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37a9b687]
2021-09-06 10:14:17,255 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@570ba13] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@448462f0]
2021-09-06 10:14:20,004 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:14:20,010 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:14:20,015 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:14:20,017 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:14:20,021 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:14:20,023 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:14:20,024 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:14:20,042 DEBUG org.hibernate.SQL [main] create sequence hibernate_sequence start with 1 increment by 1
2021-09-06 10:14:20,061 DEBUG org.hibernate.SQL [main] create table address (id integer not null, city varchar(255), pincode integer not null, primary key (id))
2021-09-06 10:14:20,094 DEBUG org.hibernate.SQL [main] create table books (id bigint not null, author varchar(255), isbn varchar(255), title varchar(255), primary key (id))
2021-09-06 10:14:20,099 DEBUG org.hibernate.SQL [main] create table customer (customer_id bigint not null, address varchar(255), mobile bigint, cust_name varchar(255), primary key (customer_id))
2021-09-06 10:14:20,103 DEBUG org.hibernate.SQL [main] create table employee (empid bigint not null, name varchar(255), address_id integer, primary key (empid))
2021-09-06 10:14:20,107 DEBUG org.hibernate.SQL [main] create table pages (id bigint not null, chapter varchar(255), content varchar(255), number integer not null, book_id bigint not null, primary key (id))
2021-09-06 10:14:20,111 DEBUG org.hibernate.SQL [main] create table user (id bigint not null, password varchar(255), role varchar(255), user_name varchar(255), primary key (id))
2021-09-06 10:14:20,116 DEBUG org.hibernate.SQL [main] alter table books add constraint UK_kibbepcitr0a3cpk3rfr7nihn unique (isbn)
2021-09-06 10:14:20,129 DEBUG org.hibernate.SQL [main] alter table employee add constraint FKga73hdtpb67twlr9c1i337tyt foreign key (address_id) references address
2021-09-06 10:14:20,161 DEBUG org.hibernate.SQL [main] alter table pages add constraint FK5lpjg9gvqj3g9ukhyecxdf6cq foreign key (book_id) references books
2021-09-06 10:14:20,250 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@448462f0] for TypeConfiguration
2021-09-06 10:14:30,830 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:14:31,059 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:14:31,062 DEBUG org.hibernate.SQL [main] call next value for hibernate_sequence
2021-09-06 10:14:31,235 DEBUG org.hibernate.SQL [main] insert into books (author, isbn, title, id) values (?, ?, ?, ?)
2021-09-06 10:14:31,247 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [VARCHAR] - [NagaRao]
2021-09-06 10:14:31,248 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [ee]
2021-09-06 10:14:31,249 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [Abc]
2021-09-06 10:14:31,253 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [BIGINT] - [1]
2021-09-06 10:14:31,366 DEBUG org.hibernate.SQL [main] insert into pages (book_id, chapter, content, number, id) values (?, ?, ?, ?, ?)
2021-09-06 10:14:31,372 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [1]
2021-09-06 10:14:31,375 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [First]
2021-09-06 10:14:31,376 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [My first chapter]
2021-09-06 10:14:31,392 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [INTEGER] - [101]
2021-09-06 10:14:31,396 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [5] as [BIGINT] - [2]
2021-09-06 10:14:31,398 DEBUG org.hibernate.SQL [main] insert into pages (book_id, chapter, content, number, id) values (?, ?, ?, ?, ?)
2021-09-06 10:14:31,399 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [1]
2021-09-06 10:14:31,399 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [2] as [VARCHAR] - [Second]
2021-09-06 10:14:31,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [3] as [VARCHAR] - [My Second chapter]
2021-09-06 10:14:31,408 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [4] as [INTEGER] - [102]
2021-09-06 10:14:31,409 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [5] as [BIGINT] - [3]
2021-09-06 10:14:32,514 DEBUG org.hibernate.SQL [main] select book0_.id as id1_1_, book0_.author as author2_1_, book0_.isbn as isbn3_1_, book0_.title as title4_1_ from books book0_
2021-09-06 10:14:32,525 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_1_] : [BIGINT]) - [1]
2021-09-06 10:14:32,545 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([author2_1_] : [VARCHAR]) - [NagaRao]
2021-09-06 10:14:32,546 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([isbn3_1_] : [VARCHAR]) - [ee]
2021-09-06 10:14:32,548 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([title4_1_] : [VARCHAR]) - [Abc]
2021-09-06 10:14:32,580 TRACE org.hibernate.type.CollectionType [main] Created collection wrapper: [com.example.demo.jpa.oneToMany.Book.pages#1]
2021-09-06 10:14:32,587 DEBUG org.hibernate.SQL [main] select pages0_.book_id as book_id5_4_0_, pages0_.id as id1_4_0_, pages0_.id as id1_4_1_, pages0_.book_id as book_id5_4_1_, pages0_.chapter as chapter2_4_1_, pages0_.content as content3_4_1_, pages0_.number as number4_4_1_ from pages pages0_ where pages0_.book_id=?
2021-09-06 10:14:32,590 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [1]
2021-09-06 10:14:32,654 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_4_1_] : [BIGINT]) - [2]
2021-09-06 10:14:32,654 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([book_id5_4_1_] : [BIGINT]) - [1]
2021-09-06 10:14:32,655 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([chapter2_4_1_] : [VARCHAR]) - [First]
2021-09-06 10:14:32,655 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([content3_4_1_] : [VARCHAR]) - [My first chapter]
2021-09-06 10:14:32,656 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([number4_4_1_] : [INTEGER]) - [101]
2021-09-06 10:14:32,659 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([book_id5_4_0_] : [BIGINT]) - [1]
2021-09-06 10:14:32,659 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_4_0_] : [BIGINT]) - [2]
2021-09-06 10:14:32,678 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_4_1_] : [BIGINT]) - [3]
2021-09-06 10:14:32,680 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([book_id5_4_1_] : [BIGINT]) - [1]
2021-09-06 10:14:32,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([chapter2_4_1_] : [VARCHAR]) - [Second]
2021-09-06 10:14:32,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([content3_4_1_] : [VARCHAR]) - [My Second chapter]
2021-09-06 10:14:32,681 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([number4_4_1_] : [INTEGER]) - [102]
2021-09-06 10:14:32,682 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([book_id5_4_0_] : [BIGINT]) - [1]
2021-09-06 10:14:32,682 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [main] extracted value ([id1_4_0_] : [BIGINT]) - [3]
2021-09-06 10:36:24,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@50b0afd7
2021-09-06 10:36:24,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@50b0afd7
2021-09-06 10:36:24,804 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50b0afd7
2021-09-06 10:36:24,805 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@214beff9
2021-09-06 10:36:24,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@39de9bda
2021-09-06 10:36:24,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1200458e
2021-09-06 10:36:24,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@5af64ce0
2021-09-06 10:36:24,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@5af64ce0
2021-09-06 10:36:24,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5af64ce0
2021-09-06 10:36:24,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@6cbe68e9
2021-09-06 10:36:24,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@6cbe68e9
2021-09-06 10:36:24,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6cbe68e9
2021-09-06 10:36:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@49f3ff41
2021-09-06 10:36:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@49f3ff41
2021-09-06 10:36:24,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49f3ff41
2021-09-06 10:36:24,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@22d9ca63
2021-09-06 10:36:24,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@22d9ca63
2021-09-06 10:36:24,838 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22d9ca63
2021-09-06 10:36:24,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@4f2d014a
2021-09-06 10:36:24,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@4f2d014a
2021-09-06 10:36:24,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f2d014a
2021-09-06 10:36:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@1d98daa0
2021-09-06 10:36:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@1d98daa0
2021-09-06 10:36:24,843 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d98daa0
2021-09-06 10:36:24,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3b7c80c6
2021-09-06 10:36:24,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@3b7c80c6
2021-09-06 10:36:24,846 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b7c80c6
2021-09-06 10:36:24,848 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@429aeac1
2021-09-06 10:36:24,849 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@429aeac1
2021-09-06 10:36:24,851 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1378eea2
2021-09-06 10:36:24,851 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1378eea2
2021-09-06 10:36:24,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@2ffe243f
2021-09-06 10:36:24,853 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@2ffe243f
2021-09-06 10:36:24,854 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43ac0a68
2021-09-06 10:36:24,855 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e3cd6fe
2021-09-06 10:36:24,857 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@5ccb85d6
2021-09-06 10:36:24,857 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ccb85d6
2021-09-06 10:36:24,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@2091833
2021-09-06 10:36:24,860 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2091833
2021-09-06 10:36:24,862 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@481558ce
2021-09-06 10:36:24,863 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@481558ce
2021-09-06 10:36:24,865 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0f28f8
2021-09-06 10:36:24,866 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c0f28f8
2021-09-06 10:36:24,868 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@c7f4457
2021-09-06 10:36:24,868 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@c7f4457
2021-09-06 10:36:24,870 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@17043b04
2021-09-06 10:36:24,871 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@17043b04
2021-09-06 10:36:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67eec8e1
2021-09-06 10:36:24,873 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67eec8e1
2021-09-06 10:36:24,876 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@546394ed
2021-09-06 10:36:24,877 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@546394ed
2021-09-06 10:36:24,882 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6975fb1c
2021-09-06 10:36:24,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6975fb1c
2021-09-06 10:36:24,886 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@1b90fee4
2021-09-06 10:36:24,887 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b90fee4
2021-09-06 10:36:24,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@4cc7d00d
2021-09-06 10:36:24,889 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4cc7d00d
2021-09-06 10:36:24,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@47248a48
2021-09-06 10:36:24,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47248a48
2021-09-06 10:36:24,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47248a48
2021-09-06 10:36:24,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7edb6fca
2021-09-06 10:36:24,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@2cca611f
2021-09-06 10:36:24,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2cca611f
2021-09-06 10:36:24,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2cca611f
2021-09-06 10:36:24,900 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@706ddbc8
2021-09-06 10:36:24,901 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6bbab114
2021-09-06 10:36:24,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@25f61c2c
2021-09-06 10:36:24,926 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25f61c2c
2021-09-06 10:36:24,928 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@234c5e41
2021-09-06 10:36:24,928 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@234c5e41
2021-09-06 10:36:24,930 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f63a513
2021-09-06 10:36:24,931 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f63a513
2021-09-06 10:36:24,932 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@43cb5f38
2021-09-06 10:36:24,932 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43cb5f38
2021-09-06 10:36:24,934 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f7eee96
2021-09-06 10:36:24,934 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f7eee96
2021-09-06 10:36:24,935 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47acd13b
2021-09-06 10:36:24,938 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@180b3819
2021-09-06 10:36:24,938 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@180b3819
2021-09-06 10:36:24,938 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@180b3819
2021-09-06 10:36:24,940 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@236eccd1
2021-09-06 10:36:24,940 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@236eccd1
2021-09-06 10:36:24,940 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@236eccd1
2021-09-06 10:36:24,943 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@4c51077d
2021-09-06 10:36:24,945 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@66bf40e5
2021-09-06 10:36:24,947 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@9b23822
2021-09-06 10:36:24,947 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@9b23822
2021-09-06 10:36:24,947 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@9b23822
2021-09-06 10:36:24,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32f32623
2021-09-06 10:36:24,950 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32f32623
2021-09-06 10:36:24,950 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32f32623
2021-09-06 10:36:24,951 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@79476a4e
2021-09-06 10:36:24,952 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@1a01d7f0
2021-09-06 10:36:24,955 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@7061622
2021-09-06 10:36:24,955 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7061622
2021-09-06 10:36:24,957 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@746c411c
2021-09-06 10:36:24,959 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@3e377967
2021-09-06 10:36:24,960 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e377967
2021-09-06 10:36:24,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@2a02e34b
2021-09-06 10:36:24,963 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a02e34b
2021-09-06 10:36:24,964 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4751e8b9
2021-09-06 10:36:24,965 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2001e48c
2021-09-06 10:36:24,988 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4b515eab
2021-09-06 10:36:25,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@5529ff44
2021-09-06 10:36:25,017 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5529ff44
2021-09-06 10:36:25,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a50d04a
2021-09-06 10:36:25,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5099c59b
2021-09-06 10:36:25,018 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73c31181
2021-09-06 10:36:25,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d620a1
2021-09-06 10:36:25,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f486211
2021-09-06 10:36:25,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51e3d37e
2021-09-06 10:36:25,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a479fda
2021-09-06 10:36:25,019 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8a6631b
2021-09-06 10:36:26,480 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37a9b687] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@525b1b70]
2021-09-06 10:36:29,187 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37a9b687] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6b8b5020]
2021-09-06 10:36:31,581 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:36:31,588 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:36:31,589 DEBUG org.hibernate.SQL [main] drop table if exists course CASCADE 
2021-09-06 10:36:31,590 DEBUG org.hibernate.SQL [main] drop table if exists course_likes CASCADE 
2021-09-06 10:36:31,591 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:36:31,592 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:36:31,593 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:36:31,593 DEBUG org.hibernate.SQL [main] drop table if exists student CASCADE 
2021-09-06 10:36:31,601 DEBUG org.hibernate.SQL [main] drop table if exists student_liked_courses CASCADE 
2021-09-06 10:36:31,601 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:36:31,602 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:36:31,609 DEBUG org.hibernate.SQL [main] create sequence hibernate_sequence start with 1 increment by 1
2021-09-06 10:36:31,642 DEBUG org.hibernate.SQL [main] create table address (id integer not null, city varchar(255), pincode integer not null, primary key (id))
2021-09-06 10:36:31,664 DEBUG org.hibernate.SQL [main] create table books (id bigint not null, author varchar(255), isbn varchar(255), title varchar(255), primary key (id))
2021-09-06 10:36:31,666 DEBUG org.hibernate.SQL [main] create table course (id bigint not null, primary key (id))
2021-09-06 10:36:31,669 DEBUG org.hibernate.SQL [main] create table course_likes (course_id bigint not null, likes_id bigint not null, primary key (course_id, likes_id))
2021-09-06 10:36:31,681 DEBUG org.hibernate.SQL [main] create table customer (customer_id bigint not null, address varchar(255), mobile bigint, cust_name varchar(255), primary key (customer_id))
2021-09-06 10:36:31,684 DEBUG org.hibernate.SQL [main] create table employee (empid bigint not null, name varchar(255), address_id integer, primary key (empid))
2021-09-06 10:36:31,688 DEBUG org.hibernate.SQL [main] create table pages (id bigint not null, chapter varchar(255), content varchar(255), number integer not null, book_id bigint not null, primary key (id))
2021-09-06 10:36:31,692 DEBUG org.hibernate.SQL [main] create table student (id bigint not null, primary key (id))
2021-09-06 10:36:31,695 DEBUG org.hibernate.SQL [main] create table student_liked_courses (student_id bigint not null, liked_courses_id bigint not null, primary key (student_id, liked_courses_id))
2021-09-06 10:36:31,697 DEBUG org.hibernate.SQL [main] create table user (id bigint not null, password varchar(255), role varchar(255), user_name varchar(255), primary key (id))
2021-09-06 10:36:31,702 DEBUG org.hibernate.SQL [main] alter table books add constraint UK_kibbepcitr0a3cpk3rfr7nihn unique (isbn)
2021-09-06 10:36:31,704 DEBUG org.hibernate.SQL [main] alter table course_likes add constraint FKhtvliuveqffco00jo5g6i3srt foreign key (likes_id) references student
2021-09-06 10:36:31,737 DEBUG org.hibernate.SQL [main] alter table course_likes add constraint FKmgb2mh1mfjcxcmtchj6bk8x4s foreign key (course_id) references course
2021-09-06 10:36:31,744 DEBUG org.hibernate.SQL [main] alter table employee add constraint FKga73hdtpb67twlr9c1i337tyt foreign key (address_id) references address
2021-09-06 10:36:31,748 DEBUG org.hibernate.SQL [main] alter table pages add constraint FK5lpjg9gvqj3g9ukhyecxdf6cq foreign key (book_id) references books
2021-09-06 10:36:31,752 DEBUG org.hibernate.SQL [main] alter table student_liked_courses add constraint FK8wq2vrvs0gwlktd41fty965ga foreign key (liked_courses_id) references course
2021-09-06 10:36:31,763 DEBUG org.hibernate.SQL [main] alter table student_liked_courses add constraint FK7yoc8we7u5512rqo0ryhah8wj foreign key (student_id) references student
2021-09-06 10:36:31,858 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6b8b5020] for TypeConfiguration
2021-09-06 10:36:44,054 DEBUG org.hibernate.SQL [main] select student0_.id as id1_7_0_ from student student0_ where student0_.id=?
2021-09-06 10:36:44,214 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [201]
2021-09-06 10:36:44,368 DEBUG org.hibernate.SQL [main] select course0_.id as id1_2_0_ from course course0_ where course0_.id=?
2021-09-06 10:36:44,370 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [501]
2021-09-06 10:36:44,628 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.demo.DemoApplication.main(DemoApplication.java:50)
Caused by: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:379)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy114.save(Unknown Source)
	at com.example.demo.DemoApplication.run(DemoApplication.java:87)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
Caused by: javax.persistence.EntityNotFoundException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$JpaEntityNotFoundDelegate.handleEntityNotFound(EntityManagerFactoryBuilderImpl.java:163)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:216)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1051)
	at org.hibernate.type.EntityType.resolveIdentifier(EntityType.java:697)
	at org.hibernate.type.EntityType.resolve(EntityType.java:464)
	at org.hibernate.type.ManyToOneType.resolve(ManyToOneType.java:240)
	at org.hibernate.type.EntityType.resolve(EntityType.java:457)
	at org.hibernate.type.EntityType.replace(EntityType.java:358)
	at org.hibernate.type.CollectionType.replaceElements(CollectionType.java:587)
	at org.hibernate.type.CollectionType.replace(CollectionType.java:750)
	at org.hibernate.type.AbstractType.replace(AbstractType.java:164)
	at org.hibernate.type.TypeHelper.replaceAssociations(TypeHelper.java:254)
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:477)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:248)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:318)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:172)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:70)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:793)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:780)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy104.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 14 common frames omitted
2021-09-06 10:36:45,310 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:36:45,337 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:36:45,341 DEBUG org.hibernate.SQL [main] drop table if exists course CASCADE 
2021-09-06 10:36:45,344 DEBUG org.hibernate.SQL [main] drop table if exists course_likes CASCADE 
2021-09-06 10:36:45,347 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:36:45,349 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:36:45,351 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:36:45,353 DEBUG org.hibernate.SQL [main] drop table if exists student CASCADE 
2021-09-06 10:36:45,355 DEBUG org.hibernate.SQL [main] drop table if exists student_liked_courses CASCADE 
2021-09-06 10:36:45,357 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:36:45,359 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:36:45,361 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6b8b5020] for TypeConfiguration
2021-09-06 10:36:45,361 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@288b73c1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6b8b5020]
2021-09-06 10:40:16,276 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@468173fa
2021-09-06 10:40:16,293 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BooleanType@468173fa
2021-09-06 10:40:16,294 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@468173fa
2021-09-06 10:40:16,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ff15a50
2021-09-06 10:40:16,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1200458e
2021-09-06 10:40:16,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@7d528cf7
2021-09-06 10:40:16,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e829999
2021-09-06 10:40:16,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.ByteType@e829999
2021-09-06 10:40:16,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e829999
2021-09-06 10:40:16,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.CharacterType@49e2b3c5
2021-09-06 10:40:16,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.CharacterType@49e2b3c5
2021-09-06 10:40:16,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49e2b3c5
2021-09-06 10:40:16,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@45b32dfe
2021-09-06 10:40:16,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.ShortType@45b32dfe
2021-09-06 10:40:16,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45b32dfe
2021-09-06 10:40:16,320 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.IntegerType@61874b9d
2021-09-06 10:40:16,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.IntegerType@61874b9d
2021-09-06 10:40:16,322 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61874b9d
2021-09-06 10:40:16,346 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@fe09383
2021-09-06 10:40:16,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.LongType@fe09383
2021-09-06 10:40:16,347 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@fe09383
2021-09-06 10:40:16,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@54336976
2021-09-06 10:40:16,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.FloatType@54336976
2021-09-06 10:40:16,353 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54336976
2021-09-06 10:40:16,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5438c17a
2021-09-06 10:40:16,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.DoubleType@5438c17a
2021-09-06 10:40:16,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5438c17a
2021-09-06 10:40:16,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8bd076a
2021-09-06 10:40:16,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8bd076a
2021-09-06 10:40:16,413 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a484ce1
2021-09-06 10:40:16,414 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a484ce1
2021-09-06 10:40:16,416 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.StringType@43ac0a68
2021-09-06 10:40:16,417 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@43ac0a68
2021-09-06 10:40:16,419 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e3cd6fe
2021-09-06 10:40:16,421 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a464fa3
2021-09-06 10:40:16,423 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.UrlType@48eaf42f
2021-09-06 10:40:16,423 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@48eaf42f
2021-09-06 10:40:16,427 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.DurationType@554188ac
2021-09-06 10:40:16,427 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@554188ac
2021-09-06 10:40:16,430 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Instant -> org.hibernate.type.InstantType@7ea2412c
2021-09-06 10:40:16,431 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ea2412c
2021-09-06 10:40:16,447 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@474179fa
2021-09-06 10:40:16,447 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@474179fa
2021-09-06 10:40:16,481 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a8341c1
2021-09-06 10:40:16,481 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a8341c1
2021-09-06 10:40:16,484 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a687d8d
2021-09-06 10:40:16,484 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a687d8d
2021-09-06 10:40:16,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22dc59b2
2021-09-06 10:40:16,558 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22dc59b2
2021-09-06 10:40:16,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3443e476
2021-09-06 10:40:16,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3443e476
2021-09-06 10:40:16,566 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1084ac45
2021-09-06 10:40:16,566 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1084ac45
2021-09-06 10:40:16,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.DateType@7bc6935c
2021-09-06 10:40:16,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@7bc6935c
2021-09-06 10:40:16,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.TimeType@7066363
2021-09-06 10:40:16,585 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7066363
2021-09-06 10:40:16,587 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@7edb6fca
2021-09-06 10:40:16,588 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7edb6fca
2021-09-06 10:40:16,588 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7edb6fca
2021-09-06 10:40:16,591 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@628b819d
2021-09-06 10:40:16,603 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.CalendarType@706ddbc8
2021-09-06 10:40:16,603 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@706ddbc8
2021-09-06 10:40:16,603 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@706ddbc8
2021-09-06 10:40:16,605 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ebe2e47
2021-09-06 10:40:16,607 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5d1b1c2a
2021-09-06 10:40:16,609 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.LocaleType@2d2b6960
2021-09-06 10:40:16,609 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d2b6960
2021-09-06 10:40:16,612 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.CurrencyType@461c3709
2021-09-06 10:40:16,612 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@461c3709
2021-09-06 10:40:16,624 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f7c420c
2021-09-06 10:40:16,624 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f7c420c
2021-09-06 10:40:16,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.ClassType@d7bbf12
2021-09-06 10:40:16,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d7bbf12
2021-09-06 10:40:16,628 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47acd13b
2021-09-06 10:40:16,629 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47acd13b
2021-09-06 10:40:16,630 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272cbb0
2021-09-06 10:40:16,659 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BinaryType@73fbdf68
2021-09-06 10:40:16,660 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@73fbdf68
2021-09-06 10:40:16,661 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BinaryType@73fbdf68
2021-09-06 10:40:16,665 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4de79b7d
2021-09-06 10:40:16,665 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4de79b7d
2021-09-06 10:40:16,665 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4de79b7d
2021-09-06 10:40:16,668 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.RowVersionType@66bf40e5
2021-09-06 10:40:16,669 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.ImageType@39666e42
2021-09-06 10:40:16,672 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.CharArrayType@5a515e5d
2021-09-06 10:40:16,672 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@5a515e5d
2021-09-06 10:40:16,672 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.CharArrayType@5a515e5d
2021-09-06 10:40:16,674 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79476a4e
2021-09-06 10:40:16,675 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79476a4e
2021-09-06 10:40:16,676 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79476a4e
2021-09-06 10:40:16,677 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.TextType@1a01d7f0
2021-09-06 10:40:16,678 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.NTextType@5a058be5
2021-09-06 10:40:16,682 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BlobType@746c411c
2021-09-06 10:40:16,682 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@746c411c
2021-09-06 10:40:16,690 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53940e2f
2021-09-06 10:40:16,694 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.ClobType@3281dfc2
2021-09-06 10:40:16,694 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3281dfc2
2021-09-06 10:40:16,697 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.NClobType@4751e8b9
2021-09-06 10:40:16,698 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4751e8b9
2021-09-06 10:40:16,699 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2001e48c
2021-09-06 10:40:16,700 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@664632e9
2021-09-06 10:40:16,721 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.SerializableType@36776c32
2021-09-06 10:40:16,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.ObjectType@4a50d04a
2021-09-06 10:40:16,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a50d04a
2021-09-06 10:40:16,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d620a1
2021-09-06 10:40:16,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f486211
2021-09-06 10:40:16,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51e3d37e
2021-09-06 10:40:16,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a479fda
2021-09-06 10:40:16,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8a6631b
2021-09-06 10:40:16,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@472d0f4
2021-09-06 10:40:16,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bc59b27
2021-09-06 10:40:16,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d7a64ca
2021-09-06 10:40:17,765 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16f0ec18] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c977dcf]
2021-09-06 10:40:19,386 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16f0ec18] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4602f874]
2021-09-06 10:40:21,885 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:40:21,889 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:40:21,890 DEBUG org.hibernate.SQL [main] drop table if exists course CASCADE 
2021-09-06 10:40:21,891 DEBUG org.hibernate.SQL [main] drop table if exists course_likes CASCADE 
2021-09-06 10:40:21,891 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:40:21,892 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:40:21,893 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:40:21,894 DEBUG org.hibernate.SQL [main] drop table if exists student CASCADE 
2021-09-06 10:40:21,894 DEBUG org.hibernate.SQL [main] drop table if exists student_liked_courses CASCADE 
2021-09-06 10:40:21,895 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:40:21,897 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:40:21,907 DEBUG org.hibernate.SQL [main] create sequence hibernate_sequence start with 1 increment by 1
2021-09-06 10:40:21,934 DEBUG org.hibernate.SQL [main] create table address (id integer not null, city varchar(255), pincode integer not null, primary key (id))
2021-09-06 10:40:21,949 DEBUG org.hibernate.SQL [main] create table books (id bigint not null, author varchar(255), isbn varchar(255), title varchar(255), primary key (id))
2021-09-06 10:40:21,952 DEBUG org.hibernate.SQL [main] create table course (id bigint not null, primary key (id))
2021-09-06 10:40:21,954 DEBUG org.hibernate.SQL [main] create table course_likes (course_id bigint not null, likes_id bigint not null, primary key (course_id, likes_id))
2021-09-06 10:40:21,964 DEBUG org.hibernate.SQL [main] create table customer (customer_id bigint not null, address varchar(255), mobile bigint, cust_name varchar(255), primary key (customer_id))
2021-09-06 10:40:21,967 DEBUG org.hibernate.SQL [main] create table employee (empid bigint not null, name varchar(255), address_id integer, primary key (empid))
2021-09-06 10:40:21,970 DEBUG org.hibernate.SQL [main] create table pages (id bigint not null, chapter varchar(255), content varchar(255), number integer not null, book_id bigint not null, primary key (id))
2021-09-06 10:40:21,975 DEBUG org.hibernate.SQL [main] create table student (id bigint not null, primary key (id))
2021-09-06 10:40:21,980 DEBUG org.hibernate.SQL [main] create table student_liked_courses (student_id bigint not null, liked_courses_id bigint not null, primary key (student_id, liked_courses_id))
2021-09-06 10:40:21,983 DEBUG org.hibernate.SQL [main] create table user (id bigint not null, password varchar(255), role varchar(255), user_name varchar(255), primary key (id))
2021-09-06 10:40:21,991 DEBUG org.hibernate.SQL [main] alter table books add constraint UK_kibbepcitr0a3cpk3rfr7nihn unique (isbn)
2021-09-06 10:40:21,996 DEBUG org.hibernate.SQL [main] alter table course_likes add constraint FKhtvliuveqffco00jo5g6i3srt foreign key (likes_id) references student
2021-09-06 10:40:22,022 DEBUG org.hibernate.SQL [main] alter table course_likes add constraint FKmgb2mh1mfjcxcmtchj6bk8x4s foreign key (course_id) references course
2021-09-06 10:40:22,028 DEBUG org.hibernate.SQL [main] alter table employee add constraint FKga73hdtpb67twlr9c1i337tyt foreign key (address_id) references address
2021-09-06 10:40:22,033 DEBUG org.hibernate.SQL [main] alter table pages add constraint FK5lpjg9gvqj3g9ukhyecxdf6cq foreign key (book_id) references books
2021-09-06 10:40:22,036 DEBUG org.hibernate.SQL [main] alter table student_liked_courses add constraint FK8wq2vrvs0gwlktd41fty965ga foreign key (liked_courses_id) references course
2021-09-06 10:40:22,046 DEBUG org.hibernate.SQL [main] alter table student_liked_courses add constraint FK7yoc8we7u5512rqo0ryhah8wj foreign key (student_id) references student
2021-09-06 10:40:22,128 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4602f874] for TypeConfiguration
2021-09-06 10:40:32,717 DEBUG org.hibernate.SQL [main] select student0_.id as id1_7_0_ from student student0_ where student0_.id=?
2021-09-06 10:40:32,749 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [201]
2021-09-06 10:40:32,929 DEBUG org.hibernate.SQL [main] select course0_.id as id1_2_0_ from course course0_ where course0_.id=?
2021-09-06 10:40:32,932 TRACE org.hibernate.type.descriptor.sql.BasicBinder [main] binding parameter [1] as [BIGINT] - [501]
2021-09-06 10:40:33,098 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.demo.DemoApplication.main(DemoApplication.java:50)
Caused by: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:379)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy114.save(Unknown Source)
	at com.example.demo.DemoApplication.run(DemoApplication.java:87)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
Caused by: javax.persistence.EntityNotFoundException: Unable to find com.example.demo.jpa.manytoMany.Course with id 501
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$JpaEntityNotFoundDelegate.handleEntityNotFound(EntityManagerFactoryBuilderImpl.java:163)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:216)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1051)
	at org.hibernate.type.EntityType.resolveIdentifier(EntityType.java:697)
	at org.hibernate.type.EntityType.resolve(EntityType.java:464)
	at org.hibernate.type.ManyToOneType.resolve(ManyToOneType.java:240)
	at org.hibernate.type.EntityType.resolve(EntityType.java:457)
	at org.hibernate.type.EntityType.replace(EntityType.java:358)
	at org.hibernate.type.CollectionType.replaceElements(CollectionType.java:587)
	at org.hibernate.type.CollectionType.replace(CollectionType.java:750)
	at org.hibernate.type.AbstractType.replace(AbstractType.java:164)
	at org.hibernate.type.TypeHelper.replaceAssociations(TypeHelper.java:254)
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:477)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:248)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:318)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:172)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:70)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:793)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:780)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy104.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 14 common frames omitted
2021-09-06 10:40:33,909 DEBUG org.hibernate.SQL [main] drop table if exists address CASCADE 
2021-09-06 10:40:33,937 DEBUG org.hibernate.SQL [main] drop table if exists books CASCADE 
2021-09-06 10:40:33,941 DEBUG org.hibernate.SQL [main] drop table if exists course CASCADE 
2021-09-06 10:40:33,945 DEBUG org.hibernate.SQL [main] drop table if exists course_likes CASCADE 
2021-09-06 10:40:33,949 DEBUG org.hibernate.SQL [main] drop table if exists customer CASCADE 
2021-09-06 10:40:33,951 DEBUG org.hibernate.SQL [main] drop table if exists employee CASCADE 
2021-09-06 10:40:33,953 DEBUG org.hibernate.SQL [main] drop table if exists pages CASCADE 
2021-09-06 10:40:33,958 DEBUG org.hibernate.SQL [main] drop table if exists student CASCADE 
2021-09-06 10:40:33,969 DEBUG org.hibernate.SQL [main] drop table if exists student_liked_courses CASCADE 
2021-09-06 10:40:33,977 DEBUG org.hibernate.SQL [main] drop table if exists user CASCADE 
2021-09-06 10:40:33,983 DEBUG org.hibernate.SQL [main] drop sequence if exists hibernate_sequence
2021-09-06 10:40:33,987 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4602f874] for TypeConfiguration
2021-09-06 10:40:33,987 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5340ccb9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4602f874]
